@model CharityEventOrganizer.Models.ViewModels.SponsorEventsViewModel
@{
    ViewData["Title"] = "Events For Sponsorship";
}

<!-- Hero Section -->
<section class="sponsor-events-hero">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="animate fade-in">Discover Events to <span class="text-highlight">Sponsor</span></h1>
                <p class="hero-subtitle animate fade-in">Find and support events that align with your organization's values and mission.</p>
            </div>
            <div class="col-lg-4 text-right">
                <a asp-action="Dashboard" class="btn btn-outline-primary btn-rounded animate fade-in">
                    <i class="fas fa-chevron-left mr-2"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>
    <div class="wave-divider"></div>
</section>

<!-- Filter Section -->
<section class="filters-section">
    <div class="container">
        <div class="filter-card animate fade-in">
            <form method="get" action="@Url.Action("EventsForSponsorship", "Sponsor")" id="filterForm">
                <div class="row">
                    <div class="col-lg-4 col-md-6 mb-3">
                        <div class="form-group mb-0">
                            <label for="searchTerm">Search</label>
                            <div class="input-with-icon">
                                <i class="fas fa-search"></i>
                                <input type="text" id="searchTerm" name="searchTerm" class="form-control"
                                       placeholder="Search by title, description..." value="@Model.SearchTerm">
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="form-group mb-0">
                            <label for="causeId">Cause</label>
                            <select id="causeId" name="causeId" class="form-control">
                                <option value="">All Causes</option>
                                @foreach (var cause in Model.Causes)
                                {
                                    <option value="@cause.Id" selected="@(Model.CurrentCauseId == cause.Id)">@cause.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="form-group mb-0">
                            <label for="sortBy">Sort By</label>
                            <select id="sortBy" name="sortBy" class="form-control">
                                <option value="date" selected="@(Model.SortBy == "date")">Date (Newest First)</option>
                                <option value="dateAsc" selected="@(Model.SortBy == "dateAsc")">Date (Oldest First)</option>
                                <option value="name" selected="@(Model.SortBy == "name")">Name (A-Z)</option>
                                <option value="nameDesc" selected="@(Model.SortBy == "nameDesc")">Name (Z-A)</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-2 col-md-6 mb-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary btn-block">
                            <i class="fas fa-filter mr-2"></i>Apply Filters
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

<!-- Events List Section -->
<section class="events-list-section">
    <div class="container">
        <div class="section-header">
            <h2 class="animate fade-in">Available Events</h2>
            <p class="animate fade-in">
                @if (Model.Events.Any())
                {
                    <span>Found @Model.Events.Count() events available for sponsorship</span>
                }
                else
                {
                    <span>No events found matching your criteria</span>
                }
            </p>
        </div>

        @if (Model.Events.Any())
        {
            <div class="row">
                @foreach (var item in Model.Events)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="event-card sponsorship-card animate fade-in">
                            <div class="event-card-header">
                                <div class="event-date">
                                    <span class="date-month">@item.EventDate.ToString("MMM")</span>
                                    <span class="date-day">@item.EventDate.Day</span>
                                </div>
                                <div class="event-tag @GetCauseClass(item.Cause.Name)">
                                    <i class="@GetCauseIcon(item.Cause.Name) mr-1"></i>
                                    @item.Cause.Name
                                </div>
                            </div>
                            <div class="event-card-body">
                                <h3 class="event-title">@item.Title</h3>
                                <div class="event-location">
                                    <i class="fas fa-map-marker-alt mr-1"></i> @item.Location
                                </div>
                                <div class="event-datetime">
                                    <i class="far fa-clock mr-1"></i> @item.EventDate.ToString("dddd, MMMM dd, yyyy at h:mm tt")
                                </div>
                                <p class="event-description">
                                    @(item.Description?.Length > 150 ? item.Description.Substring(0, 150) + "..." : item.Description)
                                </p>
                                <div class="event-organizer">
                                    <i class="fas fa-user mr-1"></i> Organized by @item.Organizer.UserName
                                </div>
                            </div>
                            <div class="event-card-actions">
                                <a asp-controller="Events" asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline btn-outline-primary btn-sm">
                                    <i class="fas fa-info-circle mr-1"></i> View Details
                                </a>
                                <form asp-action="ExpressInterest" asp-route-id="@item.Id" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <i class="fas fa-handshake mr-1"></i> Express Interest
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination can be added here if needed -->
        }
        else
        {
            <div class="empty-state animate fade-in">
                <div class="empty-state-icon">
                    <i class="fas fa-search"></i>
                </div>
                <h3 class="empty-state-title">No Events Found</h3>
                <p class="empty-state-message">No events matching your search criteria were found. Try adjusting your filters or check back later.</p>
                <a href="@Url.Action("EventsForSponsorship", "Sponsor")" class="btn btn-primary btn-rounded">
                    <i class="fas fa-sync-alt mr-2"></i>Reset Filters
                </a>
            </div>
        }
    </div>
</section>

<!-- Call to Action Section -->
<section class="sponsor-cta-section">
    <div class="container">
        <div class="cta-content text-center">
            <h2 class="animate fade-in">Make a <span class="text-highlight">Difference</span> Today</h2>
            <p class="animate fade-in">Your support can bring meaningful change to communities and causes that need it most.</p>
            <a asp-action="Dashboard" class="btn btn-primary btn-lg btn-rounded animate fade-in">
                <i class="fas fa-tachometer-alt mr-2"></i>Return to Dashboard
            </a>
        </div>
    </div>
</section>

@functions {
    public string GetCauseClass(string causeName)
    {
        return causeName.ToLower() switch
        {
            "education" => "cause-education",
            "healthcare" => "cause-healthcare",
            "environment" => "cause-environment",
            "poverty" => "cause-poverty",
            "animal welfare" => "cause-animal",
            "disaster relief" => "cause-disaster",
            _ => "cause-general"
        };
    }

    public string GetCauseIcon(string causeName)
    {
        return causeName.ToLower() switch
        {
            "education" => "fas fa-graduation-cap",
            "healthcare" => "fas fa-heartbeat",
            "environment" => "fas fa-leaf",
            "poverty" => "fas fa-home",
            "animal welfare" => "fas fa-paw",
            "disaster relief" => "fas fa-hands-helping",
            _ => "fas fa-heart"
        };
    }
}

@section Scripts {
    <script>
        // Auto-submit form when selects change
        document.getElementById('causeId').addEventListener('change', function () {
            document.getElementById('filterForm').submit();
        });

        document.getElementById('sortBy').addEventListener('change', function () {
            document.getElementById('filterForm').submit();
        });
    </script>
}